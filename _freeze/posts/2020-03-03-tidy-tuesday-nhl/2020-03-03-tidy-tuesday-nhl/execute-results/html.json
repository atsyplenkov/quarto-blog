{
  "hash": "a99217df83c9f93a0fb12f24dbd5933f",
  "result": {
    "markdown": "---\ntitle: \"Tidy Tuesday NHL\"\nauthor: \"Anatoly Tsyplenkov\"\ndate: '2020-03-03'\ncategories: [R, tidytuesday]\n---\n\n\nOkay, here it is. My first contribution to the my website. I'll try to make a very quick and simple data exploration analysis for this weeks' [Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-03-03/readme.md). There are three datasets available. I'm not sure that I'll be able to analyze all of them… Let's start from the first `top_250`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(atslib)\nlibrary(extrafont)\nlibrary(hrbrthemes)\ntheme_set(hrbrthemes::theme_ft_rc(base_family = \"Ubuntu Condensed\"))\n\ntop_250 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-03/top_250.csv')\n\ntop_250\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 251 × 9\n   raw_rank player        years   total_g…¹ url_n…² raw_l…³ link  active yr_st…⁴\n      <dbl> <chr>         <chr>       <dbl>   <dbl> <chr>   <chr> <chr>    <dbl>\n 1        1 Wayne Gretzky 1979-99       894       1 /playe… http… Retir…    1979\n 2        2 Gordie Howe   1946-80       801       2 /playe… http… Retir…    1946\n 3        3 Jaromir Jagr  1990-18       766       3 /playe… http… Retir…    1990\n 4        4 Brett Hull    1986-06       741       4 /playe… http… Retir…    1986\n 5        5 Marcel Dionne 1971-89       731       5 /playe… http… Retir…    1971\n 6        6 Phil Esposito 1963-81       717       6 /playe… http… Retir…    1963\n 7        7 Mike Gartner  1979-98       708       7 /playe… http… Retir…    1979\n 8        8 Alex Ovechkin 2005-20       700       8 /playe… http… Active    2005\n 9        9 Mark Messier  1979-04       694       9 /playe… http… Retir…    1979\n10       10 Steve Yzerman 1983-06       692      10 /playe… http… Retir…    1983\n# … with 241 more rows, and abbreviated variable names ¹​total_goals,\n#   ²​url_number, ³​raw_link, ⁴​yr_start\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nThis dataset contains 250 NHL & WHA career leaders and records for goals. First, we're going to tidy our dataset a bit. What is the most interesting here is total goals really depends on the career length?\n\nThe information about years of career contains in `years` variable. It has a structure of `YYYY-YY`. First of all, let split it to `year_start` and `year_end`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_250 <- top_250 %>% \n  mutate(year_start = str_split(years, \"-\", simplify = T)[,1],\n         year_end = str_split(years, \"-\", simplify = T)[,2]) %>% \n  mutate_at(vars(year_start), ~as.numeric(.)) %>% \n  mutate(century = ifelse(year_start < 2000, 19, 20),\n         cc = str_split(year_start, \n                        as.character(century),\n                        simplify = T)[,2],\n         cc = as.numeric(cc)) %>%\n  mutate(year_end = case_when(\n    year_end > cc ~ paste0(19, year_end),\n    TRUE ~ paste0(20, year_end)\n  )) %>% \n  mutate_at(vars(year_start, year_end), ~as.numeric(.)) %>% \n  # We need to edit millenials ))\n  mutate(year_end = ifelse(year_end < year_start,\n                           year_end + 100,\n                           year_end)) %>% \n  select(player, total_goals, year_start, year_end) \n\ntidy_250\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 251 × 4\n   player        total_goals year_start year_end\n   <chr>               <dbl>      <dbl>    <dbl>\n 1 Wayne Gretzky         894       1979     1999\n 2 Gordie Howe           801       1946     1980\n 3 Jaromir Jagr          766       1990     2018\n 4 Brett Hull            741       1986     2006\n 5 Marcel Dionne         731       1971     1989\n 6 Phil Esposito         717       1963     1981\n 7 Mike Gartner          708       1979     1998\n 8 Alex Ovechkin         700       2005     2020\n 9 Mark Messier          694       1979     2004\n10 Steve Yzerman         692       1983     2006\n# … with 241 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n:::\n\n\nGreat! Now we have a very tidy dataframe. However, if we are going to plot career length of all 250 players, it can be a total mess on the plot. Let's select only first 50 players using `dplyr::top_()`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_50 <- tidy_250 %>% \n  top_n(50, total_goals)\n```\n:::\n\n\nI prefer to use discrete color scale instead of continuous. So I'm going to convert `total_goals` into factor. I really like to do it interactively with a new [questionr](https://juba.github.io/questionr/reference/icut.html) package! So easy!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Cutting tidy_50$total_goals into tidy_50$total_goals_rec\ntidy_50$total_goals_rec <- cut(tidy_50$total_goals,\n                               include.lowest=TRUE,  right=TRUE,\n                               breaks = c(400, 500, 600, 700, 800, 900),\n                               labels = c(\"400-500\",\n                                          \"500-600\",\n                                          \"600-700\",\n                                          \"700-800\",\n                                          \"800-900\"))\n```\n:::\n\n\nOkay, so everything is ready for a plot! Please, notice, that I've already set the `ggplot` theme in the first `r` chunk via `theme_set`. I prefer to use dark themes everywhere so for this post I'll also use a dark one. Bob Rudis ([hrbrmstr](https://twitter.com/hrbrmstr)) has created a really nice one in his [hrbrthemes](https://github.com/hrbrmstr/hrbrthemes).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggalt)\nlibrary(paletteer)\n\ntidy_50 %>% \n  mutate(len = year_end - year_start) %>% \n  mutate(player = fct_reorder(player, year_start)) %>%\n  ggplot(aes(x = year_start,\n             xend = year_end,\n             y = player,\n             group = player)) + \n  ggalt::geom_dumbbell(aes(color = total_goals_rec),\n                size_x = 1.3,\n                size_xend = 1.3,\n                size = 1) +\n  labs(x = \"Years active\", y = \"\",\n       title = \"NHL Career Leaders and Records for Goals\",\n       subtitle = \"TOP 50\",\n       caption = \"Made by @atsyplen as a #TidyTuesday contribution\") +\n  paletteer::scale_color_paletteer_d(name = \"Total goals:\",\n                                     \"wesanderson::Zissou1\") +\n  theme(panel.grid.major.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](2020-03-03-tidy-tuesday-nhl_files/figure-html/plot-1.png){width=576}\n:::\n:::\n\n\nLet's create a bit more meaningful plot. It's very interesting how `total_goals` are spread inside career lengths groups! For this one I'd prefer a boxlplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_250 %>% \n  mutate(len = year_end - year_start) %>% \n  mutate(len = cut(len,\n                   include.lowest=TRUE,  right=TRUE,\n                   breaks = c(5, 10, 15, 20, 25, 30, 35, 40),\n                   labels = c(\n                     \"5-10\",\n                     \"10-15\",\n                     \"15-20\",\n                     \"20-25\",\n                     \"25-30\",\n                     \"30-35\",\n                     \"35-40\"\n                   ))) %>% \n  group_by(len) %>% \n  mutate(outlier.high = total_goals > quantile(total_goals, .75, na.rm = T) + 1.50*IQR(total_goals, na.rm = T),\n         outlier.low = total_goals < quantile(total_goals, .25, na.rm = T) - 1.50*IQR(total_goals, na.rm = T),\n         outlier.color = case_when(outlier.high ~ \"red\",\n                                   outlier.low ~ \"steelblue\",\n                                   outlier.low == F | outlier.high == F ~ \"black\")) %>%\n  ggplot(aes(x = len, y = total_goals)) +\n  stat_boxplot(geom ='errorbar',\n               width = .25,\n               color = \"white\") +\n  geom_boxplot(outlier.shape = NA,\n               color = \"white\",\n               fill = \"white\",\n               alpha = .3) +\n  geom_jitter(aes(color = outlier.color),\n              width = .1,\n              alpha = .6,\n              show.legend = F) +\n  scale_y_continuous(breaks = seq(100, 900, 100),\n                     labels = seq(100, 900, 100)) +\n  ggrepel::geom_text_repel(data = . %>% group_by(len) %>% \n                             filter(total_goals == max(total_goals)),\n                           aes(label = player), segment.colour = \"white\",\n                           color = \"white\", family = \"Ubuntu Condensed\") +\n  ggsci::scale_color_lancet() +\n  labs(y = \"Total goals scored in career\",\n       x = \"Career length, years\",\n       title = \"NHL Career Leaders and Records for Goals\",\n       subtitle = \"TOP 250\",\n       caption = \"Made by @atsyplen as a #TidyTuesday contribution\") +\n  theme(panel.grid.major.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](2020-03-03-tidy-tuesday-nhl_files/figure-html/boxplot-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2020-03-03-tidy-tuesday-nhl_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}