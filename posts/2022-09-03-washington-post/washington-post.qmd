---
title: 'Recreating Washington Post graphics with {terra} and {ggplot2}'
date: '2022-09-03'
categories: [R, hydrology]
code-fold: true
execute:
  echo: true
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
draft: true
---

# Prerequisites

```{r}
#| label: libraries

library(wildlandhydRo)
library(dplyr)
library(sf)
library(ggplot2)
library(terra)
library(tidyterra)
```

# Data load
## Watershed

```{r}
#| label: get-watershed

pitt <- tibble(lon = -79.976389,
             lat = 40.439722)

pitt <- sf::st_as_sf(pitt,
                     coords = c('lon', 'lat'))

basin <- get_Basin(pitt)
```

Check, if everything OK with it
```{r}
#| label: fig-watershed-preview
#| fig-width: 12
#| fig-height: 10
#| fig-cap: Overview map
#| fig-cap-location: margin

library(mapview)
mapview::mapview(basin)
```

## Digital elevation model (DEM)

OK, we have our watershed borders. The next step will be to download DEM to it's extent. 

```{r}
#| label: dem-download

library(elevatr)

dem <- 
  elevatr::get_elev_raster(as_Spatial(basin),
                           z = 7)

buffer_zone <-
  basin %>% 
  st_transform(32617) %>% 
  st_buffer(10^4) %>% 
  vect()

dem_m <- 
  dem %>% 
  rast() %>% 
  project("EPSG:32617") %>% 
  crop(buffer_zone)
```

## OSM data

```{r}
#| label: get-osm-data
library(osmdata)

available_tags("water")

st_bb <- 
  basin %>% 
  st_bbox() %>% 
  as.vector()

bb <- 
  data.frame(min = st_bb[1:2],
             max = st_bb[3:4],
             row.names = c("x", "y")) %>% 
  as.matrix()

rivers <- 
  bb %>%
  opq() %>%
  add_osm_feature(key = "water",
                  value = "river") %>%
  osmdata_sf()

# See https://github.com/h-a-graham/beavertools/blob/785661ea4d948543d0219f0948eee1b5091fe3cb/R/add_map_features.R


rivers <- osmdata::opq(bbox = st_bbox(basin)) %>%
  osmdata::add_osm_feature(key = 'waterway') %>%
  osmdata::osmdata_sf() %>%
  .$osm_lines

rivers_wgs <- 
  rivers %>% 
  sf::st_crop(basin) %>%
  sf::st_union()%>%
  sf::st_transform(crs = 4326) %>%
  sf::st_sf() %>%
  dplyr::mutate(river = 'River Network')

rivers_clip <- 
  st_intersection(rivers_wgs, st_as_sf(basin))
 
plot(rivers_clip)

```


# Hillshade

```{r}
slope <- terrain(dem_m,
                 "slope",
                 unit="radians")

aspect <- terrain(dem_m,
                  "aspect",
                  unit="radians")

hill <- shade(slope,
              aspect,
              angle = 45,
              direction = 315)

```

```{r}
#| label: fig-plot

ggplot() +
  geom_spatraster(data = hill,
                  alpha = .4,
                  show.legend = F) +
  geom_sf(data = basin,
          aes(geometry = geometry),
          fill = "white",
          alpha = .5,
          color = NA) +
  # Rivers
  geom_sf(data = rivers,
          inherit.aes = FALSE,
          color = "steelblue",
          size = .8,
          alpha = .3) +
  # geom_sf(data = rivers$osm_polygons,
  #         inherit.aes = FALSE,
  #         color = "steelblue",
  #         size = .8,
  #         alpha = .3) +
  # geom_sf(data = rivers$osm_multipolygons,
  #         inherit.aes = FALSE,
  #         color = "steelblue",
  #         size = .8,
  #         alpha = .3) +
  coord_sf(crs = 3857,
           expand = FALSE) +
  scale_fill_gradientn(colors = gray(0:100 / 100),
                       na.value = "transparent") +
  theme_void()


```

