{"title":"Tidy Tuesday NHL","markdown":{"yaml":{"title":"Tidy Tuesday NHL","date":"2020-03-03","categories":["R","tidytuesday"],"code-fold":true},"headingText":"Cutting tidy_50$total_goals into tidy_50$total_goals_rec","containsRefs":false,"markdown":"\n\nOkay, here it is. My first contribution to the my website. I'll try to make a very quick and simple data exploration analysis for this weeks' [Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-03-03/readme.md). There are three datasets available. I'm not sure that I'll be able to analyze all of them… Let's start from the first `top_250`.\n\n```{r libraries and data, echo=TRUE, message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(atslib)\nlibrary(extrafont)\nlibrary(hrbrthemes)\ntheme_set(hrbrthemes::theme_ft_rc(base_family = \"Ubuntu Condensed\"))\n\ntop_250 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-03/top_250.csv')\n\ntop_250\n```\n\nThis dataset contains 250 NHL & WHA career leaders and records for goals. First, we're going to tidy our dataset a bit. What is the most interesting here is total goals really depends on the career length?\n\nThe information about years of career contains in `years` variable. It has a structure of `YYYY-YY`. First of all, let split it to `year_start` and `year_end`.\n\n```{r tidy data, warning=FALSE}\ntidy_250 <- top_250 %>% \n  mutate(year_start = str_split(years, \"-\", simplify = T)[,1],\n         year_end = str_split(years, \"-\", simplify = T)[,2]) %>% \n  mutate_at(vars(year_start), ~as.numeric(.)) %>% \n  mutate(century = ifelse(year_start < 2000, 19, 20),\n         cc = str_split(year_start, \n                        as.character(century),\n                        simplify = T)[,2],\n         cc = as.numeric(cc)) %>%\n  mutate(year_end = case_when(\n    year_end > cc ~ paste0(19, year_end),\n    TRUE ~ paste0(20, year_end)\n  )) %>% \n  mutate_at(vars(year_start, year_end), ~as.numeric(.)) %>% \n  # We need to edit millenials ))\n  mutate(year_end = ifelse(year_end < year_start,\n                           year_end + 100,\n                           year_end)) %>% \n  select(player, total_goals, year_start, year_end) \n\ntidy_250\n```\n\nGreat! Now we have a very tidy dataframe. However, if we are going to plot career length of all 250 players, it can be a total mess on the plot. Let's select only first 50 players using `dplyr::top_()`. \n\n```{r welcome tidy_50, warning=FALSE}\ntidy_50 <- tidy_250 %>% \n  top_n(50, total_goals)\n```\n\nI prefer to use discrete color scale instead of continuous. So I'm going to convert `total_goals` into factor. I really like to do it interactively with a new [questionr](https://juba.github.io/questionr/reference/icut.html) package! So easy!\n\n```{r top_50 cut, warning=FALSE}\ntidy_50$total_goals_rec <- cut(tidy_50$total_goals,\n                               include.lowest=TRUE,  right=TRUE,\n                               breaks = c(400, 500, 600, 700, 800, 900),\n                               labels = c(\"400-500\",\n                                          \"500-600\",\n                                          \"600-700\",\n                                          \"700-800\",\n                                          \"800-900\"))\n```\n\nOkay, so everything is ready for a plot! Please, notice, that I've already set the `ggplot` theme in the first `r` chunk via `theme_set`. I prefer to use dark themes everywhere so for this post I'll also use a dark one. Bob Rudis ([hrbrmstr](https://twitter.com/hrbrmstr)) has created a really nice one in his [hrbrthemes](https://github.com/hrbrmstr/hrbrthemes).\n\n```{r plot, fig.height=9, fig.width=6, message=FALSE, warning=FALSE}\nlibrary(ggalt)\nlibrary(paletteer)\n\ntidy_50 %>% \n  mutate(len = year_end - year_start) %>% \n  mutate(player = fct_reorder(player, year_start)) %>%\n  ggplot(aes(x = year_start,\n             xend = year_end,\n             y = player,\n             group = player)) + \n  ggalt::geom_dumbbell(aes(color = total_goals_rec),\n                size_x = 1.3,\n                size_xend = 1.3,\n                size = 1) +\n  labs(x = \"Years active\", y = \"\",\n       title = \"NHL Career Leaders and Records for Goals\",\n       subtitle = \"TOP 50\",\n       caption = \"Made by @atsyplen as a #TidyTuesday contribution\") +\n  paletteer::scale_color_paletteer_d(name = \"Total goals:\",\n                                     \"wesanderson::Zissou1\") +\n  theme(panel.grid.major.y = element_blank())\n```\n\nLet's create a bit more meaningful plot. It's very interesting how `total_goals` are spread inside career lengths groups! For this one I'd prefer a boxlplot.\n\n```{r boxplot, warning=FALSE}\n\ntidy_250 %>% \n  mutate(len = year_end - year_start) %>% \n  mutate(len = cut(len,\n                   include.lowest=TRUE,  right=TRUE,\n                   breaks = c(5, 10, 15, 20, 25, 30, 35, 40),\n                   labels = c(\n                     \"5-10\",\n                     \"10-15\",\n                     \"15-20\",\n                     \"20-25\",\n                     \"25-30\",\n                     \"30-35\",\n                     \"35-40\"\n                   ))) %>% \n  group_by(len) %>% \n  mutate(outlier.high = total_goals > quantile(total_goals, .75, na.rm = T) + 1.50*IQR(total_goals, na.rm = T),\n         outlier.low = total_goals < quantile(total_goals, .25, na.rm = T) - 1.50*IQR(total_goals, na.rm = T),\n         outlier.color = case_when(outlier.high ~ \"red\",\n                                   outlier.low ~ \"steelblue\",\n                                   outlier.low == F | outlier.high == F ~ \"black\")) %>%\n  ggplot(aes(x = len, y = total_goals)) +\n  stat_boxplot(geom ='errorbar',\n               width = .25,\n               color = \"white\") +\n  geom_boxplot(outlier.shape = NA,\n               color = \"white\",\n               fill = \"white\",\n               alpha = .3) +\n  geom_jitter(aes(color = outlier.color),\n              width = .1,\n              alpha = .6,\n              show.legend = F) +\n  scale_y_continuous(breaks = seq(100, 900, 100),\n                     labels = seq(100, 900, 100)) +\n  ggrepel::geom_text_repel(data = . %>% group_by(len) %>% \n                             filter(total_goals == max(total_goals)),\n                           aes(label = player), segment.colour = \"white\",\n                           color = \"white\", family = \"Ubuntu Condensed\") +\n  ggsci::scale_color_lancet() +\n  labs(y = \"Total goals scored in career\",\n       x = \"Career length, years\",\n       title = \"NHL Career Leaders and Records for Goals\",\n       subtitle = \"TOP 250\",\n       caption = \"Made by @atsyplen as a #TidyTuesday contribution\") +\n  theme(panel.grid.major.x = element_blank())\n\n```\n\n","srcMarkdownNoYaml":"\n\nOkay, here it is. My first contribution to the my website. I'll try to make a very quick and simple data exploration analysis for this weeks' [Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-03-03/readme.md). There are three datasets available. I'm not sure that I'll be able to analyze all of them… Let's start from the first `top_250`.\n\n```{r libraries and data, echo=TRUE, message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(atslib)\nlibrary(extrafont)\nlibrary(hrbrthemes)\ntheme_set(hrbrthemes::theme_ft_rc(base_family = \"Ubuntu Condensed\"))\n\ntop_250 <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-03/top_250.csv')\n\ntop_250\n```\n\nThis dataset contains 250 NHL & WHA career leaders and records for goals. First, we're going to tidy our dataset a bit. What is the most interesting here is total goals really depends on the career length?\n\nThe information about years of career contains in `years` variable. It has a structure of `YYYY-YY`. First of all, let split it to `year_start` and `year_end`.\n\n```{r tidy data, warning=FALSE}\ntidy_250 <- top_250 %>% \n  mutate(year_start = str_split(years, \"-\", simplify = T)[,1],\n         year_end = str_split(years, \"-\", simplify = T)[,2]) %>% \n  mutate_at(vars(year_start), ~as.numeric(.)) %>% \n  mutate(century = ifelse(year_start < 2000, 19, 20),\n         cc = str_split(year_start, \n                        as.character(century),\n                        simplify = T)[,2],\n         cc = as.numeric(cc)) %>%\n  mutate(year_end = case_when(\n    year_end > cc ~ paste0(19, year_end),\n    TRUE ~ paste0(20, year_end)\n  )) %>% \n  mutate_at(vars(year_start, year_end), ~as.numeric(.)) %>% \n  # We need to edit millenials ))\n  mutate(year_end = ifelse(year_end < year_start,\n                           year_end + 100,\n                           year_end)) %>% \n  select(player, total_goals, year_start, year_end) \n\ntidy_250\n```\n\nGreat! Now we have a very tidy dataframe. However, if we are going to plot career length of all 250 players, it can be a total mess on the plot. Let's select only first 50 players using `dplyr::top_()`. \n\n```{r welcome tidy_50, warning=FALSE}\ntidy_50 <- tidy_250 %>% \n  top_n(50, total_goals)\n```\n\nI prefer to use discrete color scale instead of continuous. So I'm going to convert `total_goals` into factor. I really like to do it interactively with a new [questionr](https://juba.github.io/questionr/reference/icut.html) package! So easy!\n\n```{r top_50 cut, warning=FALSE}\n## Cutting tidy_50$total_goals into tidy_50$total_goals_rec\ntidy_50$total_goals_rec <- cut(tidy_50$total_goals,\n                               include.lowest=TRUE,  right=TRUE,\n                               breaks = c(400, 500, 600, 700, 800, 900),\n                               labels = c(\"400-500\",\n                                          \"500-600\",\n                                          \"600-700\",\n                                          \"700-800\",\n                                          \"800-900\"))\n```\n\nOkay, so everything is ready for a plot! Please, notice, that I've already set the `ggplot` theme in the first `r` chunk via `theme_set`. I prefer to use dark themes everywhere so for this post I'll also use a dark one. Bob Rudis ([hrbrmstr](https://twitter.com/hrbrmstr)) has created a really nice one in his [hrbrthemes](https://github.com/hrbrmstr/hrbrthemes).\n\n```{r plot, fig.height=9, fig.width=6, message=FALSE, warning=FALSE}\nlibrary(ggalt)\nlibrary(paletteer)\n\ntidy_50 %>% \n  mutate(len = year_end - year_start) %>% \n  mutate(player = fct_reorder(player, year_start)) %>%\n  ggplot(aes(x = year_start,\n             xend = year_end,\n             y = player,\n             group = player)) + \n  ggalt::geom_dumbbell(aes(color = total_goals_rec),\n                size_x = 1.3,\n                size_xend = 1.3,\n                size = 1) +\n  labs(x = \"Years active\", y = \"\",\n       title = \"NHL Career Leaders and Records for Goals\",\n       subtitle = \"TOP 50\",\n       caption = \"Made by @atsyplen as a #TidyTuesday contribution\") +\n  paletteer::scale_color_paletteer_d(name = \"Total goals:\",\n                                     \"wesanderson::Zissou1\") +\n  theme(panel.grid.major.y = element_blank())\n```\n\nLet's create a bit more meaningful plot. It's very interesting how `total_goals` are spread inside career lengths groups! For this one I'd prefer a boxlplot.\n\n```{r boxplot, warning=FALSE}\n\ntidy_250 %>% \n  mutate(len = year_end - year_start) %>% \n  mutate(len = cut(len,\n                   include.lowest=TRUE,  right=TRUE,\n                   breaks = c(5, 10, 15, 20, 25, 30, 35, 40),\n                   labels = c(\n                     \"5-10\",\n                     \"10-15\",\n                     \"15-20\",\n                     \"20-25\",\n                     \"25-30\",\n                     \"30-35\",\n                     \"35-40\"\n                   ))) %>% \n  group_by(len) %>% \n  mutate(outlier.high = total_goals > quantile(total_goals, .75, na.rm = T) + 1.50*IQR(total_goals, na.rm = T),\n         outlier.low = total_goals < quantile(total_goals, .25, na.rm = T) - 1.50*IQR(total_goals, na.rm = T),\n         outlier.color = case_when(outlier.high ~ \"red\",\n                                   outlier.low ~ \"steelblue\",\n                                   outlier.low == F | outlier.high == F ~ \"black\")) %>%\n  ggplot(aes(x = len, y = total_goals)) +\n  stat_boxplot(geom ='errorbar',\n               width = .25,\n               color = \"white\") +\n  geom_boxplot(outlier.shape = NA,\n               color = \"white\",\n               fill = \"white\",\n               alpha = .3) +\n  geom_jitter(aes(color = outlier.color),\n              width = .1,\n              alpha = .6,\n              show.legend = F) +\n  scale_y_continuous(breaks = seq(100, 900, 100),\n                     labels = seq(100, 900, 100)) +\n  ggrepel::geom_text_repel(data = . %>% group_by(len) %>% \n                             filter(total_goals == max(total_goals)),\n                           aes(label = player), segment.colour = \"white\",\n                           color = \"white\", family = \"Ubuntu Condensed\") +\n  ggsci::scale_color_lancet() +\n  labs(y = \"Total goals scored in career\",\n       x = \"Career length, years\",\n       title = \"NHL Career Leaders and Records for Goals\",\n       subtitle = \"TOP 250\",\n       caption = \"Made by @atsyplen as a #TidyTuesday contribution\") +\n  theme(panel.grid.major.x = element_blank())\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"html-math-method":"katex","include-in-header":["../../meta.html"],"reference-location":"margin","highlight-style":"github","output-file":"2020-03-03-tidy-tuesday-nhl.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","resources":["data/**"],"comments":{"giscus":{"repo":"atsyplenkov/quarto-blog"}},"_quarto-vars":{"orcid":"0000-0003-4144-8402","github-url":"https://github.com/atsyplenkov/quarto-blog","years":"2020-2024"},"theme":["../../ath.scss"],"footnotes-hover":true,"fig-cap-location":"margin","title-block-banner":false,"lightbox":true,"author":[{"name":"Anatoly Tsyplenkov","url":"https://https://anatolii.nz/","affiliation":"Manaaki Whenua – Landcare Research","orcid":"0000-0003-4144-8402"}],"citation":true,"title":"Tidy Tuesday NHL","date":"2020-03-03","categories":["R","tidytuesday"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}