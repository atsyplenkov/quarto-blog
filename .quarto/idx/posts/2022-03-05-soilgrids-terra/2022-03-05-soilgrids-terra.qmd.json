{"title":"Accessing SoilGrids via {terra}","markdown":{"yaml":{"title":"Accessing SoilGrids via {terra}","date":"2022-03-05","categories":["R","soil erosion"],"code-fold":"show","code-summary":"Show the code"},"headingText":"1. Boundary layer","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nlibrary(knitr)\nknitr::opts_chunk$set(\n  #cache = TRUE,\n  warning = FALSE,\n  message = FALSE, \n  echo = TRUE,\n  dpi = 300,\n  cache.lazy = FALSE,\n  tidy = \"styler\",\n  fig.width = 8,\n  fig.height = 5)\n```\n\nAfter several `QGIS` and `R` packages updates, I cannot download [SoilGrids](https://www.isric.org/explore/soilgrids) with `rgdal` anymore.  When I'm trying to run code from [SoilGrids WebDAV tutorial](https://git.wur.nl/isric/soilgrids/soilgrids.notebooks/-/blob/master/markdown/webdav_from_R.md) I am receiving a following error:\n\n> `ERROR 11: CURL error: SSL certificate problem: unable to get local issuer certificate`\n\nI never managed to fix this issue, so I decided to let it go since everyone is slowly quitting GDAL anyway. Here is my approach to downloading cropped and reprojected SoilGrids raster. There was a really great [tutorial](https://rpubs.com/ials2un/soilgrids_webdav) by Ivan Lizarazo on getting several SoilGrids layers using `rgdal`. My approach is mostly based on it.\n\nFirst of all, let's load some boundary layer, i.e., our area of interest (AOI). I will use the default `sf` sample data for North Carolina counties. To reduce the size of AOI, let me select only the first county. The SoilGrids files are stored in Interrupted Goode Homolosine, so I have to reproject our AOI polygon to it.\n\n```{r}\nlibrary(dplyr)\nlibrary(sf)\n\n# Load sample data\nnc <-  st_read(system.file(\"shape/nc.shp\",\n                         package = \"sf\"),\n               quiet = T) %>% \n  slice(1)\n\n# Transform to IGH projection\nigh <- '+proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs'\nnc_igh <- st_transform(nc, igh)\n\n```\n\n### 2. Download urls\nNow Let's just copy download urls from previous [tutorials](https://rpubs.com/ials2un/soilgrids_webdav). And create a link to every other separate `.vrt` file, since we are gonna `purrr::map` them later. I'm interested only in mean topsoil characteristics (i.e. 0-30 cm) right now. So I will download sand, silt, and clay content and soil organic carbon content (soc).\n\n```{r}\nsg_url <- \"/vsicurl/https://files.isric.org/soilgrids/latest/data/\"\nprops <- c(\"sand\", \"silt\", \"clay\", \"soc\")\nlayers <- c(\"0-5\", \"5-15\", \"15-30\")\n\nvrt <- paste0(props, \"/\",\n               props, \"_\",\n               rep(layers, 4),\n               \"cm_mean.vrt\")\n\nvrt[1]\n```\n\nThen, we need to create a list of paths to save. Let's create a directory `soilgrid` where we are going to download our layers.\n\n```{r}\n# Optional\n# Check if the directory exists\nif (!dir.exists(\"soilgrid\")) {dir.create(\"soilgrid\")}\n\n\n# Create paths\nlfile <- paste0(\n  \"soilgrid/\",\n  props, \"_\",\n  rep(layers, 4),\n  \".tif\")\n\nlfile[1]\n```\n\n### 3. Download and preprocess function\nMy general idea is to crop the SoilGrid layer to the bounding box, reproject to my CRS (i.e. CRS of the `nc` layer), download, and then write as `.tif`. However, I want to do this for `r length(lfile)` rasters. Therefore, we need to write a function we are going to apply:\n\n```{r warning=FALSE, message=FALSE}\nlibrary(terra)\n\n# Function to download and transform soilgrid layers\nsoilgrids_download <- function(list_vrt, # download url\n                               list_lfile, # destination path\n                               shape_igh, # AOI shape in IGH proj\n                               destproj){ # desired projection\n  \n  terra::rast(paste0(sg_url, list_vrt)) %>% # read raster\n    terra::crop(ext(vect(shape_igh))) %>%  # crop to bounding box\n    terra::project(destproj) %>%  # reproject\n    terra::writeRaster(list_lfile,\n                       overwrite = T) # Save\n  \n}\n```\n\nBefore running it in the loop, let's try it for the first layer.\n\n```{r}\n\nsoilgrids_download(list_vrt = vrt[1],\n                   list_lfile = lfile[1],\n                   shape_igh = nc_igh,\n                   destproj = st_crs(nc)$proj4string)\n\nrast(lfile[1]) %>% \n  plot()\n```\n\nIt worked!\n\n### 4. Map download\nNext, with the help of `purrr` we can apply this function to all our links. Let's measure elapsed time.\n\n```{r}\nlibrary(purrr)\nlibrary(tictoc)\n\ntic()\nwalk2(vrt,\n      lfile,\n      ~soilgrids_download(.x, .y,\n                          shape_igh = nc_igh,\n                          destproj = st_crs(nc)$proj4string))\ntoc()\n\n```\n\nWell, almost 2 mins. It is necessary to improve the timing somehow. This process can be run in parallel with `furrr`.\n\n```{r}\nlibrary(furrr)\n\n# Set Parallel\nno_cores <- availableCores() - 1\nplan(multisession,\n     workers = no_cores) \n\n# Download!\ntic()\nfuture_walk2(vrt, lfile,\n             ~soilgrids_download(.x, .y,\n                          shape_igh = nc_igh,\n                          destproj = st_crs(nc)$proj4string))\ntoc()\n\n# Exit parallel\nplan(sequential)\n\n```\n\nLess than 1 minute. As [Josh Starmer](https://www.youtube.com/channel/UCtYLUTtgS3k1Fg4y5tAhLbw) says, \"BAM!\". Three times faster! \n\n```{r}\n\nlist.files(\"soilgrid\")\n\n```\n\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nlibrary(knitr)\nknitr::opts_chunk$set(\n  #cache = TRUE,\n  warning = FALSE,\n  message = FALSE, \n  echo = TRUE,\n  dpi = 300,\n  cache.lazy = FALSE,\n  tidy = \"styler\",\n  fig.width = 8,\n  fig.height = 5)\n```\n\nAfter several `QGIS` and `R` packages updates, I cannot download [SoilGrids](https://www.isric.org/explore/soilgrids) with `rgdal` anymore.  When I'm trying to run code from [SoilGrids WebDAV tutorial](https://git.wur.nl/isric/soilgrids/soilgrids.notebooks/-/blob/master/markdown/webdav_from_R.md) I am receiving a following error:\n\n> `ERROR 11: CURL error: SSL certificate problem: unable to get local issuer certificate`\n\nI never managed to fix this issue, so I decided to let it go since everyone is slowly quitting GDAL anyway. Here is my approach to downloading cropped and reprojected SoilGrids raster. There was a really great [tutorial](https://rpubs.com/ials2un/soilgrids_webdav) by Ivan Lizarazo on getting several SoilGrids layers using `rgdal`. My approach is mostly based on it.\n\n### 1. Boundary layer\nFirst of all, let's load some boundary layer, i.e., our area of interest (AOI). I will use the default `sf` sample data for North Carolina counties. To reduce the size of AOI, let me select only the first county. The SoilGrids files are stored in Interrupted Goode Homolosine, so I have to reproject our AOI polygon to it.\n\n```{r}\nlibrary(dplyr)\nlibrary(sf)\n\n# Load sample data\nnc <-  st_read(system.file(\"shape/nc.shp\",\n                         package = \"sf\"),\n               quiet = T) %>% \n  slice(1)\n\n# Transform to IGH projection\nigh <- '+proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs'\nnc_igh <- st_transform(nc, igh)\n\n```\n\n### 2. Download urls\nNow Let's just copy download urls from previous [tutorials](https://rpubs.com/ials2un/soilgrids_webdav). And create a link to every other separate `.vrt` file, since we are gonna `purrr::map` them later. I'm interested only in mean topsoil characteristics (i.e. 0-30 cm) right now. So I will download sand, silt, and clay content and soil organic carbon content (soc).\n\n```{r}\nsg_url <- \"/vsicurl/https://files.isric.org/soilgrids/latest/data/\"\nprops <- c(\"sand\", \"silt\", \"clay\", \"soc\")\nlayers <- c(\"0-5\", \"5-15\", \"15-30\")\n\nvrt <- paste0(props, \"/\",\n               props, \"_\",\n               rep(layers, 4),\n               \"cm_mean.vrt\")\n\nvrt[1]\n```\n\nThen, we need to create a list of paths to save. Let's create a directory `soilgrid` where we are going to download our layers.\n\n```{r}\n# Optional\n# Check if the directory exists\nif (!dir.exists(\"soilgrid\")) {dir.create(\"soilgrid\")}\n\n\n# Create paths\nlfile <- paste0(\n  \"soilgrid/\",\n  props, \"_\",\n  rep(layers, 4),\n  \".tif\")\n\nlfile[1]\n```\n\n### 3. Download and preprocess function\nMy general idea is to crop the SoilGrid layer to the bounding box, reproject to my CRS (i.e. CRS of the `nc` layer), download, and then write as `.tif`. However, I want to do this for `r length(lfile)` rasters. Therefore, we need to write a function we are going to apply:\n\n```{r warning=FALSE, message=FALSE}\nlibrary(terra)\n\n# Function to download and transform soilgrid layers\nsoilgrids_download <- function(list_vrt, # download url\n                               list_lfile, # destination path\n                               shape_igh, # AOI shape in IGH proj\n                               destproj){ # desired projection\n  \n  terra::rast(paste0(sg_url, list_vrt)) %>% # read raster\n    terra::crop(ext(vect(shape_igh))) %>%  # crop to bounding box\n    terra::project(destproj) %>%  # reproject\n    terra::writeRaster(list_lfile,\n                       overwrite = T) # Save\n  \n}\n```\n\nBefore running it in the loop, let's try it for the first layer.\n\n```{r}\n\nsoilgrids_download(list_vrt = vrt[1],\n                   list_lfile = lfile[1],\n                   shape_igh = nc_igh,\n                   destproj = st_crs(nc)$proj4string)\n\nrast(lfile[1]) %>% \n  plot()\n```\n\nIt worked!\n\n### 4. Map download\nNext, with the help of `purrr` we can apply this function to all our links. Let's measure elapsed time.\n\n```{r}\nlibrary(purrr)\nlibrary(tictoc)\n\ntic()\nwalk2(vrt,\n      lfile,\n      ~soilgrids_download(.x, .y,\n                          shape_igh = nc_igh,\n                          destproj = st_crs(nc)$proj4string))\ntoc()\n\n```\n\nWell, almost 2 mins. It is necessary to improve the timing somehow. This process can be run in parallel with `furrr`.\n\n```{r}\nlibrary(furrr)\n\n# Set Parallel\nno_cores <- availableCores() - 1\nplan(multisession,\n     workers = no_cores) \n\n# Download!\ntic()\nfuture_walk2(vrt, lfile,\n             ~soilgrids_download(.x, .y,\n                          shape_igh = nc_igh,\n                          destproj = st_crs(nc)$proj4string))\ntoc()\n\n# Exit parallel\nplan(sequential)\n\n```\n\nLess than 1 minute. As [Josh Starmer](https://www.youtube.com/channel/UCtYLUTtgS3k1Fg4y5tAhLbw) says, \"BAM!\". Three times faster! \n\n```{r}\n\nlist.files(\"soilgrid\")\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"html-math-method":"katex","include-in-header":["../../meta.html"],"reference-location":"margin","highlight-style":"github","output-file":"2022-03-05-soilgrids-terra.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","resources":["data/**"],"comments":{"giscus":{"repo":"atsyplenkov/quarto-blog"}},"_quarto-vars":{"orcid":"0000-0003-4144-8402","github-url":"https://github.com/atsyplenkov/quarto-blog","years":"2020-2023"},"theme":["../../ath.scss"],"footnotes-hover":true,"fig-cap-location":"margin","title-block-banner":false,"author":[{"name":"Anatoly Tsyplenkov","url":"https://atsyplenkov.ru","affiliation":"Lomonosov Moscow State University","orcid":"0000-0003-4144-8402"}],"citation":true,"title":"Accessing SoilGrids via {terra}","date":"2022-03-05","categories":["R","soil erosion"],"code-summary":"Show the code"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}